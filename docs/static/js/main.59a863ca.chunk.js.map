{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBE,OAEM,sBAAMC,SAbO,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAQV,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACzB,MAAM,CACJC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,4DAAf,UACE,qBAAKA,UAAU,YAAYC,IAAKf,EAAKgB,IAAKN,IAC1C,4BAAIA,QCFDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGvB,ECL0B,SAACA,GAE3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAERxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAIf,CAACpB,IAEIqB,EDdwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAKlB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACnD,sBAAKgB,UAAU,YAAf,UACGI,GAAW,mBAAGJ,UAAW,mCAAd,qBAEZH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAEIA,GADCA,EAAIC,cEjBPgB,EAAe,WAEvB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAGJ,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI2C,EAAWnB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCZjB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.59a863ca.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e)=>{\r\n      setInputValue(e.target.value)\r\n\r\n  }\r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2){\r\n      setCategories( cats => [inputValue,...cats]);\r\n      setInputValue('');\r\n    }\r\n\r\n\r\n  }\r\n\r\n    return (\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n            />\r\n            </form >\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category)=>{\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Or3OU1VBUDe0rM3Sfdi6APCd8HXaXo4e`\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map(img=>{\r\n    return{\r\n      id:img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  \r\n  return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn animate__delay-2s '>\r\n          <img className='card--img' src={url} alt={title} />\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n        <div className='card-grid'>\r\n          {loading && <p className={'animate__animated animate__flash'}>Loading</p>}\r\n         {\r\n          images.map((img)=>(\r\n            <GifGridItem\r\n            key={img.id}\r\n            {...img}\r\n            />\r\n          ))\r\n\r\n        }\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(()=>{\r\n\r\n    getGifs(category)\r\n    .then(imgs=>{\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n    })\r\n\r\n  },[category])\r\n\r\n  return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\n export const GifExpertApp = ()=>{\r\n\r\n      const [categories, setCategories] = useState(['One Punch'])\r\n\r\n\r\n  return(\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map((category) =>(\r\n            <GifGrid\r\n            key={category}\r\n            category={category}/>\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}